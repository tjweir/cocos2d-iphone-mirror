Steps to convert a game based on cocos2d v0.7.2 to v0.8



v0.7.2 Deprecatred
==================

All the deprecated functions from v0.7.2 were removed.

So, all the "optionals" changes that were made in v0.7.2 are required in v0.8.0

For more information read the following files:
  convert_0_7_0_to_0_7_1.txt
  convert_0_7_1_to_0_7_2.txt


COMPULSORY CHANGES
******************

Textures
========

a)
    Default blend function is: (GL_ONE, GL_ONE_MINUS_SRC)
    cocos2d takes care if your images is premultiplied or not.
    If you were handling them manually, you should remove that code.

b) 
    Default Alpha texture is RGBA_4444 (16-bit textures). To use 32-bit RGBA textures, like in v0.7.2 add
    at the very beginning of your game:
        [Texture2D setDefaultAlphaPixelFormat:kTexture2DPixelFormat_RGBA8888];


CocosNode
=========

[OLD]
    // image size is(400,300)
    [node setTransformAnchor: ccp(200,200)];        // absolute pixels

[NEW]
    // image size is(400,300)
    [node setAnchorPoint:ccp( 0.5f, 2/3.0f)];       // relative (1,1) is top-right
                                                    // (0,0) is bottom-left
                                                    // (0.5f, 0.5f) is the middle

    transformAnchor can be read, but cannot be written anymore


Texture2D Alias/AntiAlias
=========================

The Alias/AntiAlias API is no longer a class method, but an instance method.

[OLD]:

	// Aliased images
	[Texture2D saveTexParameters];
	[Texture2D setAliasTexParameters];

	TileMapAtlas *tilemap = [TileMapAtlas tileMapAtlasWithTileFile:@"tiles.png" mapFile:@"levelmap.tga" tileWidth:16 tileHeight:16];
	
	[Texture2D restoreTexParameters];


[NEW]

	TileMapAtlas *tilemap = [TileMapAtlas tileMapAtlasWithTileFile:@"tiles.png" mapFile:@"levelmap.tga" tileWidth:16 tileHeight:16];

	// Aliased images
    [tilemap.textureAtlas.texture setAliasTexParameters];


Parallax Scroller
=================

(issue #358)

[OLD]

id node = [CocosNode node];
id child1 = [Sprite ...];
[node addChild z:0 parallaxRatio:ccp(ratioX, ratioY)];


[NEW]

id parallax = [ParallaxNode node];          // <-- ParallaxNode is the only one that suports parallax ratio 
id child1 = [Sprite ...];
[node addChild z:0 parallaxRatio:ccp(ratioX, ratioY) positionOffset:ccp(offsetX,offsetY)];



New Files
=========
    BitmapFontAtlas.h
    BitmapFontAtlas.m
    ParticleExamples.h
    ParticleExamples.m
    ParticleSystem.h
    ParticleSystem.m
    PointParticleSystem.h
    PointParticleSystem.m
    QuadParticleSystem.h
    QuadParticleSystem.m
    ParallaxNode.h
    ParallaxNode.m
    TouchDispatcher.h
    TouchDispatcher.m
    TouchHandler.h
    TouchHandler.m
    TargetedTouchDelegate.h


Removed Files
=============
    Particle.h
    Particle.m
    ParticleSystems.h
    ParticleSystems.m
    CocosNodeExtras.h
    CocosNodeExtras.m



OPTIONAL CHANGES
****************

Director
========

[OLD]
    BOOL b = [[Director sharedDirector] landscape];
    [[Director sharedDirector] setLandscape: YES];
    [[Director sharedDirector] setLandscape: NO];

[NEW]
    ccDeviceOrientation = [[Director sharedDirector] deviceOrientation];
    [[Director sharedDirector] setDviceOrientation: CCDeviceOrientationLandscapeLeft];
    [[Director sharedDirector] setDviceOrientation: CCDeviceOrientationPortrait];
